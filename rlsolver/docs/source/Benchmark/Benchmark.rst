Benchmark
=========

This section presents the evaluation results of graph MaxCut algorithms under two settings:  
(1) **distribution-wise**, using the BA distribution;  
(2) **instance-wise**, using the Gset dataset.

1. Distribution-wise Benchmark
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. raw:: html

    <div style="overflow-x: auto;">

.. csv-table:: Table 1: Results for graph MaxCut on BA distribution
   :header: Nodes, Gurobi, S2V-DQN, S2V-DQN#Gurobi, ECO-DQN, ECO-DQN#Gurobi, Ours, Ours#Gurobi
   :widths: 6, 8, 8, 10, 8, 10, 8, 10

   100, 283.7, 272.3, -4.0%, 283.63, -0.02%, 283.7, 0
   200, 583.3, 557.2, -4.5%, 581.7, -0.26%, 582.2, -0.17%
   300, 880.4, 825.4, -6.2%, 873.9, -0.74%, 878.0, -0.27%
   400, 1179.2, 1100.6, -6.7%, 1165.3, -1.18%, 1174.2, -0.42%
   500, 1477.6, 1374.9, -6.9%, 1167.2, -1.0%, 1471.4, -0.42%
   600, 1774.5, 1647.2, -7.1%, 1752.6, -1.2%, 1769.1, -0.3%
   700, 2068.6, 1907.3, -7.8%, 2043.3, -1.2%, 2062.6, -0.3%
   800, 2361.0, 2182.1, -7.6%, 2331.3, -1.3%, 2358.7, -0.1%
   900, 2655.9, 2425.5, -8.7%, 2616.9, -1.5%, 2647.0, -0.3%
   1000, 2952.2, 2706.1, -8.3%, 2911.9, -1.3%, 2940.3, -0.4%

.. raw:: html

    </div>

.. note::

   The relative difference (columns with "#Gurobi") represents the performance gap with Gurobi's result. Higher values are better.

2. Instance-wise Benchmark
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. raw:: html

    <div style="overflow-x: auto;">

.. csv-table:: Table 5: Results for graph MaxCut on the Gset dataset in instance-wise scenario
   :header: Graph, Nodes, Edges, BLS, DSDP, KHLWG, RUN-CSP, PI-GNN, iSCO, dREINFORCE, MCPG, Jumanji
   :widths: 6, 6, 8, 8, 8, 8, 8, 8, 8, 10, 8, 8
   :stub-columns: 1

   G14, 800, 4694, 3064, -, 2922, 3061, 2943, 3056, 3064, 3064, 3064
   G15, 800, 4661, 3050, 2938, 3050, 2928, 2990, 3046, 3050, 3050, 2979
   G22, 2000, 19990, 13359, 12960, 13359, 13028, 13181, 13289, 13359, 13359, 13261
   G49, 3000, 6000, 6000, 6000, 6000, 6000, 5918, 5940, 6000, 6000, 5987
   G50, 3000, 6000, 5880, 5880, 5880, 5880, 5820, 5874, 5880, 5880, 5872
   G55, 5000, 12468, 10294, 9960, 10236, 10116, 10138, 10218, 10298, 10296, 10283
   G70, 10000, 9999, 9541, 9456, 9458, -, 9421, 9442, 9586, 9578, 9554

.. raw:: html

    </div>

.. note::

   PI-GNN and Jumanji follow Pattern I; iSCO, dREINFORCE, and MCPG follow Pattern II.



.. csv-table:: Results for TSP on the TSPLIB dataset in instance-wise scenario.
   :header: "Instance", "LKH", "S2V-DQN", "PI-GNN (Pattern I)", "dREINFORCE (Pattern II)", "MCPG (Pattern I)", "Jumanji (Pattern II)", "Cheap", "Christofides"
   :widths: auto

   eil51, 426, 439, 445, 428, 428, 428, 446, 494
   berlin52, **7542**, **7542**, 7657, **7542**, **7542**, **7542**, 7788, 9013
   st70, 675, 696, 690, 682, 682, 682, 753, 776
   eil76, 538, 564, 575, 553, 553, 553, 591, 607
   pr76, 108159, 108446, 108536, 108437, **108405**, **108405**, 115460, 125935
   rat99, 1211, 1280, 1291, 1272, 1260, 1260, 1390, 1473
   kroA100, 21282, 21897, 21905, 21886, **21863**, **21863**, 21923, 22876
   kroB100, 22141, 22692, 22783, 22634, **22607**, **22607**, 23107, 23496
   kroC100, 20749, 21074, 21631, 21014, **21004**, **21004**, 21524, 23445
   kroD100, 21294, 22102, 22304, 22107, **22019**, **22019**, 22087, 23967
   kroE100, 22068, 22913, 22978, 22869, **22803**, **22803**, 23106, 22800
   rd100, 7910, 8159, 8189, 8153, 8132, 8114, 8744, 8757
   eil101, 629, 659, 669, 702, **651**, **651**, 664, 702
   lin105, 14379, 15023, 15236, 15014, 14856, 14907, 15023, 15536
   pr107, 44303, 45113, 45234, 45013, **44728**, 44765, 45128, 47058
   pr124, 59030, 61623, 61614, 61514, **61137**, 61185, 63214, 64765
   bier127, 118282, 121576, 122354, 120367, **120367**, **120139**, 121324, 128103
   ch130, 6110, 6270, 6394, 6231, **6215**, 6238, 6368, 6470
   pr136, 96772, 99474, 99356, 99136, 98075, **98013**, 104265, 110531
   ch144, 58537, 59436, 59487, 59415, **59137**, **59137**, 602361, 60321
   pr150, 6528, 6985, 6992, 6834, 6746, 6784, 7021, 7232
   kroA150, 26524, 27888, 27956, 27726, 27162, **27134**, 27195, 29666
   kroB150, 26130, 27209, 28413, 27135, **27027**, 27109, 27547, 29517
   pr152, 73682, 75283, 77468, 77368, **74337**, **74337**, 75462, 77206
   u159, 42080, 45433, 45624, 44632, **43501**, 43952, 44367, 47664
   rat195, 2323, 2581, 2674, 2551, **2529**, **2529**, 2631, 2605
   d198, 15780, 16453, 16554, 16231, **16018**, 16237, 16325, 16596
   kroA200, 29368, 30965, 31632, 30826, **30537**, 30621, 31848, 32760
   kroB200, 29437, 31692, 31953, 31321, 31189, **31024**, 31635, 33107
   tsp225, 3916, 4154, 4161, 4109, **3967**, 4013, 4150, 4278
   pr226, 80369, 81873, 81962, 81632, 81031, **80510**, 81310, 89262
   gil262, 2378, 2537, 2561, 2536, 2487, **2485**, 2607, 2597
   pr264, 49135, 52364, 52961, 52120, **52018**, 52115, 5326, 54547
   a280, 2579, 2867, 2931, 2861, **2759**, 2768, 2964, 2914
   pr299, 48191, 51895, 52136, 51134, 50107, **49357**, 51328, 54914
   lin318, 42029, 45375, 45057, 45653, 44069, **44068**, 45231, 45263
   linhp318, 41345, 45444, 45647, 44362, **43246**, 43627, 44367, 45263



.. csv-table:: Total flop count in tensor-train network of various sizes. The compared methods are OE Greedy, CTG Greedy, and CTG Kahypar.
   :header: "Size", "OE Greedy", "CTG Greedy", "CTG Kahypar", "dREINFORCE (Pattern II)", "MCPG (Pattern II)"
   :widths: auto

   N=100, 30.927, 30.705, 30.710, 30.404, 30.404
   N=200, 61.030, 60.808, 60.810, **60.507**, **60.507**
   N=400, 121.236, 121.014, 121.010, **120.713**, 120.968
   N=600, 181.442, 181.220, 181.220, 180.919, 180.976
   N=800, 241.648, 241.426, 241.430, **241.125**, **241.125**
   N=1000, 301.854, 301.632, 301.630, 301.331, 301.937
   N=1500, -, -, 452.150, **451.846**, 451.925
   N=2000, -, -, 602.660, **602.361**, 602.571

.. csv-table:: Total flop count in Sycamore circuit of various cycles. The compared methods are OE Greedy, CTG Greedy, CTG Kahypar, AC-QDP, and RL-TNCO.
   :header: "Cycles", "OE Greedy", "CTG Greedy", "CTG Kahypar", "AC-QDP", "RL-TNCO", "dREINFORCE (Pattern II)", "MCPG (Pattern II)"
   :widths: auto

   m=12, 17.795, 17.065, 13.407, 13.037, 10.736, **10.117**, **10.117**
   m=14, 19.679, 19.281, 14.149, 13.851, 12.869, **12.029**, 12.726
   m=16, 25.889, 23.152, 17.013, 17.061, -, **13.967**, 14.532
   m=18, 26.793, 23.569, 17.681, 17.412, -, **17.113**, **17.113**
   m=20, 26.981, 25.622, 18.825, 18.823, 18.543, **18.158**, 18.17


